{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\2021\\\\ReactJS\\\\wordup\\\\src\\\\components\\\\pages\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useAlert } from 'react-alert';\nimport '../../styles/style.css'; //import Synonyms from './Synonyms';\n//import Words from './components/Words';\n//import { wordsData } from './components/wordsData';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [meaning, setMeaning] = useState([]);\n  const [word, setWord] = useState('');\n  const [example, setExample] = useState('');\n  const [synonyms, setSynonyms] = useState([]); // const [checkArray, setCheckArray]  = useState([])\n\n  const history = useHistory();\n  const alert = useAlert();\n  useEffect(() => {\n    getWord();\n  }, [word], [synonyms]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //  var search = search[0].toUpperCase()+search.substr(1)\n\n    setWord(search);\n    setSearch('');\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    setWord(\"\");\n    setMeaning([]);\n    setSynonyms([]);\n    setExample(\"\");\n  }; //  Iterates over data object to extract definations, synonyms etc.  \n\n\n  function iterateObject(data) {\n    for (var item in data) {\n      if (typeof data[item] == \"object\") {\n        if (item === \"synonyms\") {\n          var synonyms = data[item];\n          setSynonyms(synonyms);\n        }\n\n        iterateObject(data[item]);\n      } else {\n        if (item === \"definition\") {\n          var meaning = data[item];\n          setMeaning(meaning);\n        }\n\n        if (item === \"example\") {\n          var example = data[item];\n          setExample(example);\n        }\n      }\n    }\n  }\n  /*fetches the meaning of search word from dictionary api  for iterate */\n\n\n  const getWord = async () => {\n    if (word !== '') {\n      setWord(word);\n\n      try {\n        const response = await fetch(`https://mydictionaryapi.appspot.com/?define=${word}`);\n        const data = await response.json();\n        iterateObject(data);\n      } catch (error) {\n        let message = \"Word NOT Found - Check spellings or connection\"; //        alert.error(message)\n\n        setMeaning(message);\n        console.log(error);\n      }\n    }\n  }; //save a dictionary searched word to personalised word list  \n\n\n  const saveWord = async () => {\n    const username = localStorage.getItem('username');\n    console.log('body object', word, meaning, username);\n    let token = localStorage.getItem('token');\n\n    if (token) {\n      let bodyData = {\n        word,\n        meaning,\n        username\n      };\n\n      try {\n        let response = await fetch(`http://127.0.0.1:8000/api/words/`, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Token ${token}`\n          },\n          body: JSON.stringify(bodyData)\n        });\n        console.log('response code saveWord func', response.status);\n        alert.show(`${word}  has been saved`, {\n          type: 'info'\n        }); //          window.location.replace('http://localhost:3000/')\n\n        history.goBack();\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert.show(' Please login or register to Save word to personlised liste ', {\n        type: 'info'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          padding: \"3em\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" English Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui fluid icon input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: search,\n              onChange: updateSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"ui violet button\",\n              value: \"submit\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"search link icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), \" Search Dictionary\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          padding: \"3em\"\n        },\n        children: word === '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\" \", word]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle\",\n            style: {\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui violet button\",\n              value: \"save\",\n              onClick: saveWord,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"save icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), \"\\xA0 Save to List\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", meaning, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          padding: \"3em\"\n        },\n        children: example == '' ? '' : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", example, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        style: {\n          padding: \"3em\"\n        },\n        children: [synonyms == '' ? '' : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Synonyms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 34\n        }, this), synonyms.map(synonym => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [`${synonym} , `, console.log('type of ', typeof synonym)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, synonyms.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Search, \"RAlzMWngHEEuhDvwhRd9S1MUkLA=\", false, function () {\n  return [useHistory, useAlert];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/2021/ReactJS/wordup/src/components/pages/Search.js"],"names":["React","useEffect","useState","useContext","useHistory","useAlert","Search","search","setSearch","meaning","setMeaning","word","setWord","example","setExample","synonyms","setSynonyms","history","alert","getWord","handleSubmit","e","preventDefault","updateSearch","target","value","iterateObject","data","item","response","fetch","json","error","message","console","log","saveWord","username","localStorage","getItem","token","bodyData","method","headers","body","JSON","stringify","status","show","type","goBack","padding","float","map","synonym","id"],"mappings":"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","sourcesContent":["import React,  {useEffect, useState , useContext  } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from 'react-alert';\r\nimport  '../../styles/style.css';\r\n//import Synonyms from './Synonyms';\r\n//import Words from './components/Words';\r\n//import { wordsData } from './components/wordsData';\r\n\r\nconst Search = () =>{\r\n  const [search, setSearch ] = useState('')\r\n  const [meaning, setMeaning] = useState([])\r\n  const [word , setWord] = useState('')\r\n  const [example, setExample] = useState('')\r\n  const [synonyms, setSynonyms] = useState([])\r\n// const [checkArray, setCheckArray]  = useState([])\r\n  const history = useHistory()\r\n\r\n\r\n  const alert = useAlert()\r\n\r\n  useEffect( ()=> {\r\n    getWord()\r\n  }, [word], [synonyms]);\r\n  \r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    //  var search = search[0].toUpperCase()+search.substr(1)\r\n    setWord(search)\r\n    setSearch('')  \r\n  }\r\n  \r\n  const updateSearch = (e) =>{\r\n    setSearch(e.target.value)\r\n    setWord(\"\")\r\n    setMeaning([])\r\n    setSynonyms([])\r\n    setExample(\"\")\r\n  }\r\n  \r\n  //  Iterates over data object to extract definations, synonyms etc.  \r\n  function iterateObject(data) {\r\n    for (var item in data) {\r\n      if (typeof(data[item]) == \"object\"){\r\n        if (item === \"synonyms\"){\r\n          var synonyms = data[item]\r\n          setSynonyms(synonyms)\r\n        }\r\n        iterateObject(data[item])\r\n      }\r\n      else \r\n      {\r\n        if (item === \"definition\") {\r\n          var meaning = data[item]\r\n          setMeaning(meaning)\r\n        }\r\n        if (item === \"example\"){\r\n          var example = data[item]\r\n          setExample(example)\r\n        }\r\n      }    \r\n    }\r\n  }\r\n  \r\n  \r\n    /*fetches the meaning of search word from dictionary api  for iterate */\r\n  const getWord = async() => {\r\n    if (word !== '') {\r\n      setWord(word)\r\n      try {\r\n        const response = await fetch(`https://mydictionaryapi.appspot.com/?define=${word}`)\r\n        const data = await response.json()\r\n        iterateObject(data)\r\n\r\n      } catch(error) {\r\n        let message = \"Word NOT Found - Check spellings or connection\"\r\n//        alert.error(message)\r\n        setMeaning(message)\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n\r\n\r\n //save a dictionary searched word to personalised word list  \r\n\r\n  const saveWord = async() => {\r\n    const username = localStorage.getItem('username')\r\n    console.log('body object', word, meaning, username)\r\n    let token = localStorage.getItem('token')\r\n\r\n\r\n    if (token){\r\n      let bodyData = {  word, meaning, username }\r\n      try {\r\n        let response = await fetch(`http://127.0.0.1:8000/api/words/` ,\r\n          { method : 'POST' ,\r\n            headers :  { \r\n              'Content-type': 'application/json' ,\r\n              'Authorization' : `Token ${token}`           \r\n              } ,   \r\n              body : JSON.stringify(bodyData)\r\n          } ,)\r\n          console.log('response code saveWord func', response.status)\r\n          alert.show( `${word}  has been saved`, {\r\n            type: 'info',\r\n          })\r\n//          window.location.replace('http://localhost:3000/')\r\n          history.goBack()\r\n        } \r\n          catch (error) { \r\n            console.log(error) \r\n          }   \r\n      } else {\r\n        alert.show(' Please login or register to Save word to personlised liste ', {\r\n          type: 'info',\r\n        })\r\n      }\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\" style={{padding:\"3em\"}}>\r\n\r\n          <h3 > English Dictionary</h3>\r\n\r\n          <form className=\"\" onSubmit={handleSubmit} >\r\n              <div className=\"ui fluid icon input\">\r\n                <input type=\"text\" value={search} onChange={updateSearch}   />\r\n                <button type=\"submit\" className=\"ui violet button\"  value=\"submit\">\r\n                    <i className=\"search link icon\"/> Search Dictionary\r\n                </button>\r\n              </div>\r\n          </form>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\"  style={{padding:\"3em\"}}>\r\n          { word === '' ? (\r\n          <div>\r\n            <h1>Search</h1> <h1>Save</h1> <h1>Master</h1>\r\n          </div> \r\n          ):\r\n          <> \r\n            <span><h4> { word }</h4></span> \r\n            <span className=\"align-middle\" style={{float:\"right\"}} >\r\n              <button className=\"ui violet button\" value=\"save\" onClick={saveWord}>\r\n                  <i className=\"save icon\" />&nbsp; Save to List\r\n              </button>\r\n            </span>\r\n            <p> {meaning} </p>\r\n          </> \r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n          <div className=\"col-md-3\"> </div>\r\n          <div className=\"col-md-6\" style={{padding:\"3em\"}}> \r\n          { example == ''  ? '' : \r\n            (<>\r\n              <h4>Example</h4>\r\n             <p> {example} </p>\r\n            </>)\r\n          }\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"> </div>\r\n        <div className=\"col-md-6\" style={{padding:\"3em\"}}> \r\n        { synonyms == ''  ? '' : <h3>Synonyms</h3>}\r\n          {  synonyms.map(synonym =>(\r\n            <span key={synonyms.id}>\r\n              <strong>\r\n              { `${ synonym } , ` }\r\n              { console.log('type of ', typeof(synonym) )}\r\n              {/* `${synonym.synonym[0].toUpperCase() + synonym.synonym.substring(1)} ,`*/}\r\n              </strong>\r\n            </span>  \r\n          ))\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n    )\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}