{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Dell/Desktop/2021/ReactJS/wordup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Dell/Desktop/2021/ReactJS/wordup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Dell/Desktop/2021/ReactJS/wordup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from'react';import{useHistory}from\"react-router-dom\";import{useAlert}from'react-alert';import'../../styles/style.css';//import Synonyms from './Synonyms';\n//import Words from './components/Words';\n//import { wordsData } from './components/wordsData';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Search=function Search(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),meaning=_useState4[0],setMeaning=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),word=_useState6[0],setWord=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),example=_useState8[0],setExample=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),synonyms=_useState10[0],setSynonyms=_useState10[1];// const [checkArray, setCheckArray]  = useState([])\nvar history=useHistory();var alert=useAlert();useEffect(function(){getWord();},[word],[synonyms]);var handleSubmit=function handleSubmit(e){e.preventDefault();//  var search = search[0].toUpperCase()+search.substr(1)\nsetWord(search);setSearch('');};var updateSearch=function updateSearch(e){setSearch(e.target.value);setWord(\"\");setMeaning([]);setSynonyms([]);setExample(\"\");};//  Iterates over data object to extract definations, synonyms etc.  \nfunction iterateObject(data){for(var item in data){if(typeof data[item]==\"object\"){if(item===\"synonyms\"){var synonyms=data[item];setSynonyms(synonyms);}iterateObject(data[item]);}else{if(item===\"definition\"){var meaning=data[item];setMeaning(meaning);}if(item===\"example\"){var example=data[item];setExample(example);}}}}/*fetches the meaning of search word from dictionary api  for iterate */var getWord=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(word!=='')){_context.next=17;break;}setWord(word);_context.prev=2;_context.next=5;return fetch(\"https://mydictionaryapi.appspot.com/?define=\".concat(word));case 5:response=_context.sent;_context.next=8;return response.json();case 8:data=_context.sent;iterateObject(data);_context.next=17;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);message=\"Word NOT Found - Check spellings or connection\";//        alert.error(message)\nsetMeaning(message);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,12]]);}));return function getWord(){return _ref.apply(this,arguments);};}();//save a dictionary searched word to personalised word list  \nvar saveWord=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var username,token,bodyData,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:username=localStorage.getItem('username');console.log('body object',word,meaning,username);token=localStorage.getItem('token');if(!token){_context2.next=19;break;}bodyData={word:word,meaning:meaning,username:username};_context2.prev=5;_context2.next=8;return fetch(\"http://127.0.0.1:8000/api/words/\",{method:'POST',headers:{'Content-type':'application/json','Authorization':\"Token \".concat(token)},body:JSON.stringify(bodyData)});case 8:response=_context2.sent;console.log('response code saveWord func',response.status);alert.show(\"\".concat(word,\"  has been saved\"),{type:'info'});window.location.replace('http://localhost:3000/');_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](5);console.log(_context2.t0);case 17:_context2.next=20;break;case 19:alert.show(' Please login or register to Save word to personlised liste ',{type:'info'});case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[5,14]]);}));return function saveWord(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",style:{padding:\"3em\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\" English Dictionary\"}),/*#__PURE__*/_jsx(\"form\",{className:\"\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"ui fluid icon input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:search,onChange:updateSearch}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"ui violet button\",value:\"submit\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"search link icon\"}),\" Search Dictionary\"]})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",style:{padding:\"3em\"},children:word===''?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Improve your vocubolary\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"header-big\",children:\"Search... Save...  Master\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsxs(\"h4\",{children:[\" \",word]})}),/*#__PURE__*/_jsx(\"span\",{className:\"align-middle\",style:{float:\"right\"},children:/*#__PURE__*/_jsxs(\"button\",{className:\"ui violet button\",value:\"save\",onClick:saveWord,children:[/*#__PURE__*/_jsx(\"i\",{className:\"save icon\"}),\"\\xA0 Save to List\"]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",meaning,\" \"]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:\" \"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",style:{padding:\"3em\"},children:example==''?'':/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Example\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",example,\" \"]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:\" \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",style:{padding:\"3em\"},children:[synonyms==''?'':/*#__PURE__*/_jsx(\"h3\",{children:\"Synonyms\"}),synonyms.map(function(synonym){return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"\".concat(synonym,\" , \"),console.log('type of ',typeof synonym)]})},synonyms.id);})]})]})]});};export default Search;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/2021/ReactJS/wordup/src/components/pages/Search.js"],"names":["React","useEffect","useState","useContext","useHistory","useAlert","Search","search","setSearch","meaning","setMeaning","word","setWord","example","setExample","synonyms","setSynonyms","history","alert","getWord","handleSubmit","e","preventDefault","updateSearch","target","value","iterateObject","data","item","fetch","response","json","message","console","log","saveWord","username","localStorage","getItem","token","bodyData","method","headers","body","JSON","stringify","status","show","type","window","location","replace","padding","float","map","synonym","id"],"mappings":"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","sourcesContent":["import React,  {useEffect, useState , useContext  } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAlert } from 'react-alert';\r\nimport  '../../styles/style.css';\r\n//import Synonyms from './Synonyms';\r\n//import Words from './components/Words';\r\n//import { wordsData } from './components/wordsData';\r\n\r\nconst Search = () =>{\r\n  const [search, setSearch ] = useState('')\r\n  const [meaning, setMeaning] = useState([])\r\n  const [word , setWord] = useState('')\r\n  const [example, setExample] = useState('')\r\n  const [synonyms, setSynonyms] = useState([])\r\n// const [checkArray, setCheckArray]  = useState([])\r\n  const history = useHistory()\r\n\r\n\r\n  const alert = useAlert()\r\n\r\n  useEffect( ()=> {\r\n    getWord()\r\n  }, [word], [synonyms]);\r\n  \r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    //  var search = search[0].toUpperCase()+search.substr(1)\r\n    setWord(search)\r\n    setSearch('')  \r\n  }\r\n  \r\n  const updateSearch = (e) =>{\r\n    setSearch(e.target.value)\r\n    setWord(\"\")\r\n    setMeaning([])\r\n    setSynonyms([])\r\n    setExample(\"\")\r\n  }\r\n  \r\n  //  Iterates over data object to extract definations, synonyms etc.  \r\n  function iterateObject(data) {\r\n    for (var item in data) {\r\n      if (typeof(data[item]) == \"object\"){\r\n        if (item === \"synonyms\"){\r\n          var synonyms = data[item]\r\n          setSynonyms(synonyms)\r\n        }\r\n        iterateObject(data[item])\r\n      }\r\n      else \r\n      {\r\n        if (item === \"definition\") {\r\n          var meaning = data[item]\r\n          setMeaning(meaning)\r\n        }\r\n        if (item === \"example\"){\r\n          var example = data[item]\r\n          setExample(example)\r\n        }\r\n      }    \r\n    }\r\n  }\r\n  \r\n  \r\n    /*fetches the meaning of search word from dictionary api  for iterate */\r\n  const getWord = async() => {\r\n    if (word !== '') {\r\n      setWord(word)\r\n      try {\r\n        const response = await fetch(`https://mydictionaryapi.appspot.com/?define=${word}`)\r\n        const data = await response.json()\r\n        iterateObject(data)\r\n\r\n      } catch(error) {\r\n        let message = \"Word NOT Found - Check spellings or connection\"\r\n//        alert.error(message)\r\n        setMeaning(message)\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n  \r\n //save a dictionary searched word to personalised word list  \r\n\r\n  const saveWord = async() => {\r\n    const username = localStorage.getItem('username')\r\n    console.log('body object', word, meaning, username)\r\n    let token = localStorage.getItem('token')\r\n\r\n    if (token){\r\n      let bodyData = {  word, meaning, username }\r\n      try {\r\n        let response = await fetch(`http://127.0.0.1:8000/api/words/` ,\r\n          { method : 'POST' ,\r\n            headers :  { \r\n              'Content-type': 'application/json' ,\r\n              'Authorization' : `Token ${token}`           \r\n              } ,   \r\n              body : JSON.stringify(bodyData)\r\n          } ,)\r\n          console.log('response code saveWord func', response.status)\r\n          alert.show( `${word}  has been saved`, {\r\n            type: 'info',\r\n          })\r\n         window.location.replace('http://localhost:3000/')\r\n        } \r\n          catch (error) { \r\n            console.log(error) \r\n          }   \r\n      } else {\r\n        alert.show(' Please login or register to Save word to personlised liste ', {\r\n          type: 'info',\r\n        })\r\n      }\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\" style={{padding:\"3em\"}}>\r\n\r\n          <h3 > English Dictionary</h3>\r\n\r\n          <form className=\"\" onSubmit={handleSubmit} >\r\n              <div className=\"ui fluid icon input\">\r\n                <input type=\"text\" value={search} onChange={updateSearch}   />\r\n                <button type=\"submit\" className=\"ui violet button\"  value=\"submit\">\r\n                    <i className=\"search link icon\"/> Search Dictionary\r\n                </button>\r\n              </div>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\"  style={{padding:\"3em\"}}>\r\n          { word === '' ? (\r\n          <div>\r\n            <h1>Improve your vocubolary</h1>\r\n            <h1 className=\"header-big\">Search... Save...  Master</h1>\r\n          </div> \r\n          ):\r\n          <> \r\n            <span><h4> { word }</h4></span> \r\n            <span className=\"align-middle\" style={{float:\"right\"}} >\r\n              <button className=\"ui violet button\" value=\"save\" onClick={saveWord}>\r\n                  <i className=\"save icon\" />&nbsp; Save to List\r\n              </button>\r\n            </span>\r\n            <p> {meaning} </p>\r\n          </> \r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n          <div className=\"col-md-3\"> </div>\r\n          <div className=\"col-md-6\" style={{padding:\"3em\"}}> \r\n          { example == ''  ? '' : \r\n            (<>\r\n              <h4>Example</h4>\r\n             <p> {example} </p>\r\n            </>)\r\n          }\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"> </div>\r\n        <div className=\"col-md-6\" style={{padding:\"3em\"}}> \r\n        { synonyms == ''  ? '' : <h3>Synonyms</h3>}\r\n          {  synonyms.map(synonym =>(\r\n            <span key={synonyms.id}>\r\n              <strong>\r\n              { `${ synonym } , ` }\r\n              { console.log('type of ', typeof(synonym) )}\r\n              {/* `${synonym.synonym[0].toUpperCase() + synonym.synonym.substring(1)} ,`*/}\r\n              </strong>\r\n            </span>  \r\n          ))\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n    )\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}